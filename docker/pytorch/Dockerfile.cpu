# syntax = docker/dockerfile:experimental
# based onhttps://github.com/pytorch/pytorch/blob/master/Dockerfile
# 
# NOTE: To build this you will need a docker version > 18.06 with
#       experimental enabled and DOCKER_BUILDKIT=1
#
#       If you do not use buildkit you are not going to have a good time
#
#       For reference: 
#           https://docs.docker.com/develop/develop-images/build_enhancements/

ARG BASE_IMAGE=ubuntu:20.04
FROM ${BASE_IMAGE} AS dev-base
RUN --mount=type=cache,id=apt-dev,target=/var/cache/apt \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
         build-essential \
         cmake \
         git \
         curl \
         ca-certificates \
         libjpeg-dev \
         ccache \
         numactl \
         libpng-dev && \
     rm -rf /var/lib/apt/lists/*
RUN /usr/sbin/update-ccache-symlinks
RUN mkdir /opt/ccache && ccache --set-config=cache_dir=/opt/ccache
ENV PATH /opt/conda/bin:$PATH

FROM dev-base as conda
ARG PYTHON_VERSION=3.8
RUN curl -fsSL -v -o ~/miniconda.sh -O  https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh  && \
    chmod +x ~/miniconda.sh && \
    ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda install -y python=${PYTHON_VERSION} conda-build pyyaml numpy ipython \ 
    mkl mkl-include ninja cython typing Pillow && \
    /opt/conda/bin/conda clean -ya

FROM dev-base AS build
ARG VERSION=v1.6.0
ARG WITH_TORCHVISION=1
COPY --from=conda /opt/conda /opt/conda
WORKDIR /opt/pytorch
RUN git clone https://github.com/pytorch/pytorch.git . && git checkout $VERSION && \
    git submodule sync && git submodule update --init --recursive
RUN --mount=type=cache,target=/opt/ccache \
    USE_MKLDNN=1 USE_CUDA=0 USE_CUDNN=0 \
    CMAKE_PREFIX_PATH="$(dirname $(which conda))/../" pip install -v .
RUN if [ "$WITH_TORCHVISION" = "1" ] ; then git clone https://github.com/pytorch/vision.git && \
    cd vision && pip install -v . ; else echo "building without torchvision" ; fi

FROM dev-base as dev
COPY --from=build /opt/conda /opt/conda
ENV OMP_NUM_THREADS 1
ENV KMP_BLOCKTIME 1
ENV KMP_HW_SUBSET 1T
ENV LD_PRELOAD "/opt/conda/lib/libiomp5.so"
WORKDIR /workspace
